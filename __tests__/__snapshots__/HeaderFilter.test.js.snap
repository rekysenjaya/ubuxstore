// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
      "height": 1334,
    }
  }
>
  <View
    onLayout={[Function]}
  >
    <View
      androidStatusBarColor="#F17C5F"
      span={true}
      style={
        Array [
          Object {
            "backgroundColor": "#F8F8F8",
            "borderBottomColor": "#a7a6ab",
            "borderBottomWidth": 0.5,
            "elevation": 3,
            "flexDirection": "row",
            "height": 128,
            "justifyContent": "center",
            "left": 0,
            "paddingLeft": 6,
            "paddingRight": 10,
            "paddingTop": 18,
            "right": 0,
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
            "top": 0,
          },
          Object {
            "backgroundColor": "#F17C5F",
            "height": 130,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {},
            Object {
              "flexDirection": "column",
              "marginTop": 10,
              "width": 730,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {},
              Object {
                "flex": 1,
                "flexDirection": "row",
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#FFF",
                "borderBottomWidth": 1,
                "borderColor": "#D9D5DC",
                "borderLeftWidth": 1,
                "borderRadius": 30,
                "borderRightWidth": 1,
                "borderTopWidth": 1,
                "borderWidth": 1,
                "flex": 1,
                "flexDirection": "row",
                "marginBottom": 10,
                "marginLeft": 2,
                "opacity": 1,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              placeholder="Search"
              placeholderTextColor="#575757"
              returnKeyType="search"
              style={
                Object {
                  "color": "#000",
                  "flex": 1,
                  "fontSize": 17,
                  "height": 50,
                  "paddingLeft": 8,
                  "paddingRight": 5,
                  "top": 1.5,
                }
              }
              underlineColorAndroid="rgba(0,0,0,0)"
              value=""
            />
          </View>
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "justifyContent": "center",
                "marginHorizontal": 10,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {
                      "color": "#000",
                      "fontSize": 30,
                    },
                    Object {
                      "color": "#000",
                      "fontSize": 30,
                    },
                    Object {
                      "color": "#FFF",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderBottomWidth": 1,
              "borderColor": "#D9D5DC",
              "borderLeftWidth": 0,
              "borderRadius": undefined,
              "borderRightWidth": 0,
              "borderTopWidth": 0,
              "borderWidth": undefined,
              "flexDirection": "row",
              "marginLeft": 0,
              "opacity": 1,
            }
          }
        >
          <View>
            <View
              accessible={true}
              isTVSelectable={true}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": null,
                  "borderBottomWidth": null,
                  "borderColor": "#007aff",
                  "borderLeftWidth": null,
                  "borderRadius": 5,
                  "borderRightWidth": null,
                  "borderTopWidth": null,
                  "borderWidth": undefined,
                  "elevation": 0,
                  "flexDirection": "row",
                  "height": 45,
                  "justifyContent": "space-between",
                  "opacity": 1,
                  "paddingBottom": 6,
                  "paddingTop": 6,
                  "shadowColor": null,
                  "shadowOffset": null,
                  "shadowOpacity": null,
                  "shadowRadius": null,
                  "width": undefined,
                }
              }
            >
              <Text
                note={true}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "color": "#a7a7a7",
                      "fontFamily": "System",
                      "fontSize": 16,
                      "lineHeight": null,
                      "marginLeft": 0,
                      "marginRight": 0,
                      "paddingLeft": 16,
                      "paddingRight": 16,
                    },
                    undefined,
                    Object {
                      "color": "#FFF",
                    },
                  ]
                }
                uppercase={false}
              >
                Select Status
              </Text>
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    Array [
                      Object {
                        "color": "#000",
                        "fontSize": 30,
                      },
                      Object {
                        "color": "#000",
                        "fontSize": 24,
                        "marginLeft": 16,
                        "marginRight": 16,
                        "paddingTop": 2,
                      },
                      Object {
                        "fontSize": 22,
                        "lineHeight": 26,
                      },
                      Object {},
                    ],
                    Object {
                      "fontFamily": "Ionicons",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                  ]
                }
              >
                
              </Text>
            </View>
            <Modal
              animationType="slide"
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={null}
              transparent={false}
              visible={false}
            >
              <View
                style={
                  Object {
                    "backgroundColor": "#fff",
                    "flex": 1,
                    "height": 1334,
                  }
                }
              >
                <View
                  onLayout={[Function]}
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#F8F8F8",
                        "borderBottomColor": "#a7a6ab",
                        "borderBottomWidth": 0.5,
                        "elevation": 3,
                        "flexDirection": "row",
                        "height": 64,
                        "justifyContent": "center",
                        "left": 0,
                        "paddingLeft": 6,
                        "paddingRight": 10,
                        "paddingTop": 18,
                        "right": 0,
                        "shadowColor": undefined,
                        "shadowOffset": undefined,
                        "shadowOpacity": undefined,
                        "shadowRadius": undefined,
                        "top": 0,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "flex-start",
                          "alignSelf": "center",
                          "flex": 1,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "alignItems": "center",
                            "alignSelf": null,
                            "backgroundColor": "transparent",
                            "borderBottomWidth": null,
                            "borderColor": null,
                            "borderLeftWidth": null,
                            "borderRadius": 5,
                            "borderRightWidth": null,
                            "borderTopWidth": null,
                            "borderWidth": undefined,
                            "elevation": 0,
                            "flexDirection": "row",
                            "height": 45,
                            "justifyContent": "space-between",
                            "marginLeft": 3,
                            "opacity": 1,
                            "paddingBottom": 6,
                            "paddingLeft": 4,
                            "paddingRight": 6,
                            "paddingTop": 6,
                            "shadowColor": null,
                            "shadowOffset": null,
                            "shadowOpacity": null,
                            "shadowRadius": null,
                          }
                        }
                      >
                        <Text
                          style={
                            Object {
                              "backgroundColor": "transparent",
                              "color": "#007aff",
                              "fontFamily": "System",
                              "fontSize": 17,
                              "marginLeft": 0,
                              "marginRight": 0,
                              "paddingLeft": 2,
                              "paddingRight": undefined,
                              "top": 1,
                            }
                          }
                          uppercase={false}
                        >
                          Back
                        </Text>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "alignSelf": "center",
                          "flex": 1,
                        }
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          Object {
                            "color": "#000",
                            "fontFamily": "System",
                            "fontSize": 17,
                            "fontWeight": "700",
                            "marginLeft": undefined,
                            "paddingLeft": 4,
                            "paddingTop": 1,
                            "textAlign": "center",
                          }
                        }
                      >
                        Select One
                      </Text>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "flex-end",
                          "alignSelf": "center",
                          "flex": 1,
                          "flexDirection": "row",
                          "justifyContent": "flex-end",
                        }
                      }
                    />
                  </View>
                </View>
                <RCTScrollView
                  data={
                    Array [
                      <Item
                        label="Select Status"
                      />,
                    ]
                  }
                  disableVirtualization={false}
                  getItem={[Function]}
                  getItemCount={[Function]}
                  horizontal={false}
                  initialNumToRender={10}
                  keyExtractor={[Function]}
                  maxToRenderPerBatch={10}
                  numColumns={1}
                  onContentSizeChange={[Function]}
                  onEndReachedThreshold={2}
                  onLayout={[Function]}
                  onMomentumScrollEnd={[Function]}
                  onScroll={[Function]}
                  onScrollBeginDrag={[Function]}
                  onScrollEndDrag={[Function]}
                  renderItem={[Function]}
                  scrollEventThrottle={50}
                  stickyHeaderIndices={Array []}
                  updateCellsBatchingPeriod={50}
                  viewabilityConfigCallbackPairs={Array []}
                  windowSize={21}
                >
                  <View>
                    <View
                      onLayout={[Function]}
                      style={null}
                    >
                      <View
                        accessible={true}
                        isTVSelectable={true}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={null}
                      >
                        <View
                          button={true}
                          onPress={[Function]}
                          selected={false}
                          style={
                            Object {
                              "alignItems": "center",
                              "backgroundColor": "transparent",
                              "borderBottomWidth": 0.5,
                              "borderColor": "#c9c9c9",
                              "flexDirection": "row",
                              "marginLeft": 16,
                              "paddingBottom": 13,
                              "paddingRight": 16,
                              "paddingTop": 13,
                            }
                          }
                        >
                          <View
                            style={
                              Object {
                                "alignItems": "flex-start",
                                "alignSelf": "center",
                                "flex": 1,
                                "flexDirection": "row",
                              }
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "alignSelf": "center",
                                  "color": "#000",
                                  "fontFamily": "System",
                                  "fontSize": 16,
                                }
                              }
                              uppercase={false}
                            >
                              Select Status
                            </Text>
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "flex-end",
                                "alignSelf": "center",
                                "flex": 0.28,
                                "paddingBottom": null,
                                "paddingLeft": null,
                                "paddingRight": null,
                                "paddingTop": null,
                              }
                            }
                          >
                            <View
                              accessible={true}
                              isTVSelectable={true}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Object {
                                  "alignSelf": null,
                                  "opacity": 1,
                                }
                              }
                            />
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </RCTScrollView>
              </View>
            </Modal>
          </View>
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    viewIsInsideTabBar={false}
  >
    <View />
  </RCTScrollView>
</View>
`;
